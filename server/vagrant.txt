------------macでvagrantの準備------------------
vagrantのインストール
https://www.vagrantup.com/downloads.html
からguiでインストール

バージョン確認
$ vagrant --version

VirtualBoxのインストール
https://www.virtualbox.org/wiki/Downloads
からguiでインストール

vagrantで使うディレクトリの準備
$ mkdir ~/isucon-vagrant
$ cd ~/isucon-vagrant/
bitbucketのisucon5のリポジトリのserver/Vagrantfileがあるのでそれをvargantで使うディレクトリ直下にコピー
$ cp ~/isucon5/server/Vagrantfile ~/isucon-vagrant/

Vagrantfileがあるディレクトリ(~/isucon-vagrant)でvagrant upを実行する
$ vagrant up
めっちゃ時間かかるのでスリープとかしてネットにつながらなくならないように要注意
接続
$ vagrant ssh
ベンチマーク実行
$ sudo /home/isucon/bench.sh

この状態だとブラウザから確認ができないので設定を変える
$ exit
$ vagrant halt
$ vi Vagrantfile
config.vm.network "private_network", ip: "192.168.33.10" コメントアウト解除

$ vagrant up
$ vagrant ssh
ユーザーをisuconに切り替える
$ sudo su isucon
これで192.168.33.10でブラウザから確認可能

vim入れる
$ sudo apt-get install vim

-----------現状だと何で動いているのかわからないのでphpで動かす-----------
$ sudo systemctl stop nginx
$ sudo apt-get purge nginx
$ curl http://nginx.org/keys/nginx_signing.key | sudo apt-key add -
$ sudo sh -c "echo 'deb http://nginx.org/packages/ubuntu/ vivid nginx' >> /etc/apt/sources.list"
$ sudo sh -c "echo 'deb-src http://nginx.org/packages/ubuntu/ vivid nginx' >> /etc/apt/sources.list"
$ sudo apt-get update
$ sudo apt-get install nginx
$ sudo systemctl start nginx
$ sudo systemctl enable nginx

$ sudo vi /etc/nginx/nginx.conf

user  www-data;
worker_processes  16;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
        worker_connections  10240;
        accept_mutex_delay 100ms;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
                                                            
     access_log  /var/log/nginx/access.log  main;
                                                                
     sendfile        on;
     tcp_nopush     on;
                                                                        
     keepalive_timeout  65;
                                                                            
     gzip  on;
     gzip_types text/javascript;

     open_file_cache max=100 inactive=20s;
     
     include /etc/nginx/conf.d/*.conf;
}

$ sudo vi /etc/nginx/conf.d/default.conf

server {
     listen       80;
     server_name  localhost;

     #charset koi8-r;
     #access_log  /var/log/nginx/log/host.access.log  main;

     location / {
         root   /var/www/webapp/php;
         index  index.php;
         try_files $uri $uri/ /index.php?$args;
     }

     location ~ ^/(css|fonts|js) {
         root /var/www/isucon/webapp/static;
     }
     #error_page  404              /404.html;

     # redirect server error pages to the static page /50x.html
     #
     error_page   500 502 503 504  /50x.html;
     location = /50x.html {
          root   /usr/share/nginx/html;
     } 
     # proxy the PHP scripts to Apache listening on 127.0.0.1:80
     #
     #location ~ \.php$ {
     #    proxy_pass   http://127.0.0.1;
     #}
     # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
     #
     location ~ \.php$ {
          root           /var/www/isucon/webapp/php;
          fastcgi_pass   unix:run/php5-fpm.sock;
          fastcgi_index  index.php;
          fastcgi_param  SCRIPT_FILENAME  $document_root/$fastcgi_script_name;
          include        fastcgi_params;
     }
}



$ sudo apt-get install php5-fpm
$ sudo systemctl start php5-fp
$ sudo systemctl enable php5-fpm
$ sudo apt-get install php5-mysql
ベンチマーク確認
$ sh bench.sh

-----チューニング開始!!

